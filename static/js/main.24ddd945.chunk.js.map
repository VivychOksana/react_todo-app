{"version":3,"sources":["Components/Header.js","Components/TodoItem.js","Components/TodosList.js","Components/Footer.js","App.js","index.js"],"names":["Header","_ref","todo","currentIndex","handleChange","handleSubmit","react_default","a","createElement","className","onSubmit","event","type","placeholder","value","onChange","TodoItem","handleCheck","handleRemove","filterField","showTodos","classNames","completed","id","checked","htmlFor","todoTitle","onClick","TodoList","filteredTodosList","toggleCompleted","style","display","map","Components_TodoItem","key","Footer","todosList","deleteAllCompleted","concat","filter","length","href","selected","some","App","state","target","_this","setState","trimLeft","preventDefault","todoItem","prevState","Object","objectSpread2","toConsumableArray","_ref2","check","list","item","remove","filterType","_ref3","toggle","_this$state","this","Components_Header","TodosList","Components_Footer","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.24ddd945.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = ({\n  todo,\n  currentIndex,\n  handleChange,\n  handleSubmit,\n}) => (\n  <header className=\"header\">\n    <h1>todos</h1>\n    <form\n      onSubmit={event => handleSubmit(todo, currentIndex, event)}\n    >\n      <input\n        type=\"text\"\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        value={todo}\n        onChange={handleChange}\n      />\n    </form>\n  </header>\n);\n\nHeader.propTypes = {\n  todo: PropTypes.string,\n  handleChange: PropTypes.func,\n  handleSubmit: PropTypes.func,\n}.isRequired;\n\nexport default Header;\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst TodoItem = ({\n  todo,\n  handleCheck,\n  handleRemove,\n  filterField,\n  showTodos,\n}) => (\n  <li className={classNames({ completed: todo.completed })}>\n    <div className=\"view\">\n      <input\n        type=\"checkbox\"\n        className=\"toggle\"\n        id={todo.id}\n        checked={todo.completed}\n        onChange={event => handleCheck(\n          event, todo, filterField, showTodos\n        )}\n      />\n      <label htmlFor={todo.id}>{todo.todoTitle}</label>\n      <button\n        type=\"button\"\n        className=\"destroy\"\n        onClick={() => handleRemove(todo)}\n      />\n    </div>\n  </li>\n);\n\nTodoItem.propTypes = {\n  todo: PropTypes.string,\n  handleCheck: PropTypes.func,\n  handleRemove: PropTypes.func,\n}.isRequired;\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({\n  filteredTodosList,\n  handleCheck,\n  handleRemove,\n  toggleCompleted,\n  filterField,\n  showTodos,\n}) => (\n  <section className=\"main\" style={{ display: 'block' }}>\n    <input\n      type=\"checkbox\"\n      id=\"toggle-all\"\n      className=\"toggle-all\"\n      onClick={event => toggleCompleted(event)}\n    />\n    {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n    <label htmlFor=\"toggle-all\">\n      Mark all as complete\n    </label>\n    <ul className=\"todo-list\">\n      {filteredTodosList\n        .map(todo => (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n            handleCheck={handleCheck}\n            handleRemove={handleRemove}\n            filterField={filterField}\n            showTodos={showTodos}\n          />\n        ))\n      }\n    </ul>\n  </section>\n);\n\nTodoList.propTypes = {\n  filteredTodosList: PropTypes.arrayOf(PropTypes.shape({\n    todoTitle: PropTypes.string,\n    id: PropTypes.number,\n    completed: PropTypes.bool,\n  })),\n  handleCheck: PropTypes.func,\n  handleRemove: PropTypes.func,\n  toggleCompleted: PropTypes.func,\n}.isRequired;\n\nexport default TodoList;\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst Footer = ({\n  todosList,\n  filteredTodosList,\n  filterField,\n  showTodos,\n  deleteAllCompleted,\n}) => (\n  <footer className=\"footer\" style={{ display: 'block' }}>\n    <span className=\"todo-count\">\n      {`${todosList.filter(todo => todo.completed === false)\n        .length} `}\n      items left\n    </span>\n\n    <ul className=\"filters\">\n      <li>\n        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n        <a\n          href=\"#/\"\n          className={classNames({ selected: filterField === 'all' })}\n          onClick={showTodos}\n        >\n          All\n        </a>\n      </li>\n\n      <li>\n        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n        <a\n          href=\"#/active\"\n          className={classNames({ selected: filterField === 'active' })}\n          onClick={() => showTodos('active')}\n        >\n          Active\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/completed\"\n          className={classNames({ selected: filterField === 'completed' })}\n          onClick={() => showTodos('completed')}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n\n    <button\n      type=\"button\"\n      className=\"clear-completed\"\n      style={{\n        display: filteredTodosList.some(todo => todo.completed === true)\n          ? 'block'\n          : 'none',\n      }}\n      onClick={() => deleteAllCompleted(showTodos)}\n    >\n      Clear completed\n    </button>\n  </footer>\n);\n\nFooter.propTypes = {\n  filteredTodosList: PropTypes.arrayOf(PropTypes.shape({\n    todoTitle: PropTypes.string,\n    id: PropTypes.number,\n    completed: PropTypes.bool,\n  })),\n  filterField: PropTypes.string,\n  showActiveTodos: PropTypes.func,\n  showAllTodos: PropTypes.func,\n  showCompletedTodos: PropTypes.func,\n  deleteAllCompleted: PropTypes.func,\n}.isRequired;\n\nexport default Footer;\n","import React from 'react';\nimport Header from './Components/Header';\nimport TodosList from './Components/TodosList';\nimport Footer from './Components/Footer';\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    todo: '',\n    currentIndex: 0,\n    todosList: [],\n    filteredTodosList: [],\n    filterField: 'all',\n  };\n\n  handleChange = ({ target }) => {\n    const { value } = target;\n\n    this.setState({\n      todo: value.trimLeft(),\n    });\n  };\n\n  handleSubmit = (todo, currentIndex, event) => {\n    event.preventDefault();\n    if (todo) {\n      const todoItem = {\n        todoTitle: todo,\n        id: currentIndex,\n        completed: false,\n      };\n\n      this.setState(prevState => ({\n        ...prevState,\n        todo: '',\n        currentIndex: prevState.currentIndex + 1,\n        todosList: [...prevState.todosList, todoItem],\n        filteredTodosList: [...prevState.todosList, todoItem],\n        filterField: 'all',\n      }));\n    }\n  };\n\n  handleCheck = (\n    { target },\n    todoItem,\n    filterField,\n    showTodos\n  ) => {\n    function check(list, id, checked) {\n      return list.map((item) => {\n        if (item.id === id) {\n          return {\n            ...item,\n            completed: checked,\n          };\n        }\n\n        return item;\n      });\n    }\n\n    this.setState(prevState => ({\n      todosList: check(prevState.todosList, todoItem.id, target.checked),\n      filteredTodosList:\n        check(prevState.filteredTodosList, todoItem.id, target.checked),\n    }));\n\n    if (filterField === 'active') {\n      showTodos(filterField);\n    } else if (filterField === 'completed') {\n      showTodos(filterField);\n    }\n  };\n\n  handleRemove = (todoItem) => {\n    function remove(list, id) {\n      return list.filter(item => item.id !== id);\n    }\n\n    this.setState(prevState => ({\n      todosList: remove(prevState.todosList, todoItem.id),\n      filteredTodosList: remove(prevState.filteredTodosList, todoItem.id),\n    }));\n  };\n\n  showTodos = (filterType) => {\n    switch (filterType) {\n      case 'active':\n        return this.setState(prevState => ({\n          filteredTodosList:\n            prevState.todosList.filter(todo => todo.completed === false),\n          filterField: 'active',\n        }));\n      case 'completed':\n        return this.setState(prevState => ({\n          filteredTodosList:\n            prevState.todosList.filter(todo => todo.completed === true),\n          filterField: 'completed',\n        }));\n      default:\n        return this.setState(prevState => ({\n          filteredTodosList: prevState.todosList,\n          filterField: 'all',\n        }));\n    }\n  };\n\n  toggleCompleted = ({ target }) => {\n    function toggle(list, checked) {\n      return list.map(item => ({\n        ...item,\n        completed: checked,\n      }));\n    }\n\n    this.setState(prevState => ({\n      filteredTodosList: toggle(prevState.filteredTodosList, target.checked),\n      todosList: toggle(prevState.todosList, target.checked),\n    }));\n  };\n\n  deleteAllCompleted = (showTodos) => {\n    this.setState(prevState => ({\n      filteredTodosList:\n        prevState.todosList.filter(todo => todo.completed === false),\n      todosList: prevState.todosList.filter(todo => todo.completed === false),\n    }));\n    showTodos('all');\n  };\n\n  render() {\n    const {\n      todosList, todo, filteredTodosList, filterField, currentIndex,\n    } = this.state;\n\n    if (todosList.length < 1) {\n      return (\n        <section className=\"todoapp\">\n          <Header\n            todo={todo}\n            currentIndex={currentIndex}\n            handleChange={this.handleChange}\n            handleSubmit={this.handleSubmit}\n          />\n        </section>\n      );\n    }\n\n    return (\n      <section className=\"todoapp\">\n        <Header\n          todo={todo}\n          currentIndex={currentIndex}\n          handleChange={this.handleChange}\n          handleSubmit={this.handleSubmit}\n        />\n        <TodosList\n          filteredTodosList={filteredTodosList}\n          handleCheck={this.handleCheck}\n          showTodos={this.showTodos}\n          handleRemove={this.handleRemove}\n          toggleCompleted={this.toggleCompleted}\n          filterField={filterField}\n        />\n\n        <Footer\n          todosList={todosList}\n          filteredTodosList={filteredTodosList}\n          filterField={filterField}\n          showTodos={this.showTodos}\n          deleteAllCompleted={this.deleteAllCompleted}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}